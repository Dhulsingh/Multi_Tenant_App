const controller = require('../controllers/analytics.controller')
const { authJwt } = require('../middleware')

module.exports = function (app) {
  app.use(function (req, res, next) {
    res.header('Access-Control-Allow-Headers', 'x-access-token, Origin, Content-Type, Accept')
    next()
  })
  /**
   * @swagger
   *tags:
   *  name: Analytics
   *  description: API to manage the analytics returns.
   */

  /**
   * @swagger
   * /api/analytics/73/{id}:
   *   post:
   *    tags:
   *       - Analytics
   *    summary: "Demographics analytic's results"
   *    operationId: fr
   *    description: "Use to obtain results from Demographics algorithm for an specific camera under a range of time"
   *    parameters:
   *      - in: path
   *        name: id
   *        schema:
   *          type: string
   *        required: true
   *      - in: header
   *        name: x-access-token
   *        schema:
   *          type: string
   *        required: true
   *    requestBody:
   *       content:
   *          application/json:
   *            schema:
   *              type: object
   *              properties:
   *                type:
   *                  description: "Type of data to be retrieved. Can be cam_id, id_branch or id_account."
   *                  type: string
   *                  example: cam_id
   *                start:
   *                  description: "Date for initial range. Format: 2020-10-01T03:00:00.000Z."
   *                  type: string
   *                  example: 2020-10-01T03:00:00.000Z
   *                end:
   *                  description: "Date for end range. Format: 2020-10-01T03:00:00.000Z."
   *                  type: string
   *                  example: 2020-11-01T02:59:59.000Z
   *    responses:
   *      '200':
   *        description: "A successful response"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: true
   *               data:
   *                 type: object
   *                 properties:
   *                   table:
   *                     description: "Raw data from MySQL."
   *                     type: array
   *                     example: []
   *      '500':
   *        description: "Server error"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: false
   *               message:
   *                 description: "Type of failure"
   *                 type: string
   *                 example: Error message generated by the server
   */
  app.post('/api/analytics/73/:id', [authJwt.isAvailable, authJwt.verifyToken], controller.newFr)
}
