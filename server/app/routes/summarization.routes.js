const controller = require('../controllers/summarization.controller')
const {authJwt} = require('../middleware')

module.exports = function (app) {
  app.use(function (req, res, next) {
    res.header('Access-Control-Allow-Headers', 'x-access-token, Origin, Content-Type, Accept')
    next()
  })

  /**
   * @swagger
   *tags:
   *  name: Summarization
   *  description: API to manage summarization
   */

  /**
   * @swagger
   * /api/video/process:
   *   post:
   *    tags:
   *       - Summarization
   *    summary: "Process video for summarization"
   *    operationId: processvideo
   *    description: "Used to summarize video"
   *    parameters:
   *      - in: header
   *        name: x-access-token
   *        schema:
   *          type: string
   *        required: true
   *    requestBody:
   *       content:
   *          application/json:
   *            schema:
   *              type: object
   *              properties:
   *                inputFileName:
   *                  description: "Input video file name"
   *                  type: string
   *                  example: inputFileName
   *                  required: true
   *                duration:
   *                  description: "Duration in minutes"
   *                  type: number
   *                  example: 4
   *                  required: true
   *                startTime:
   *                  description: "Start time in HH:mm:ss format"
   *                  type: string
   *                  example: 00:00:00
   *                  required: true
   *                endTime:
   *                  description: "End time in HH:mm:ss format"
   *                  type: string
   *                  example: 00:04:00
   *                  required: true
   *    responses:
   *      '200':
   *        description: "A successful response"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: true
   *               message:
   *                 description: "Response Message"
   *                 type: string
   *                 example: Video is under process, it will be ready soon.
   *      '500':
   *        description: "Server error"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: false
   *               message:
   *                 description: "Response Message"
   *                 type: string
   *                 example: Error message generated by the server
   */
  app.post('/api/video/process', [authJwt.verifyToken], controller.processVideo)

  /**
   * @swagger
   * /api/video/videoChunk:
   *   post:
   *    tags:
   *       - Summarization
   *    summary: "Play video by chunking"
   *    operationId: playvideo
   *    description: "Used to play summarized video"
   *    parameters:
   *      - in: header
   *        name: x-access-token
   *        schema:
   *          type: string
   *        required: true
   *    requestBody:
   *       content:
   *          application/json:
   *            schema:
   *              type: object
   *              properties:
   *                clientId:
   *                  description: "Client id"
   *                  type: string
   *                  example: clientId
   *                  required: true
   *                inputFileName:
   *                  description: "Input video file name"
   *                  type: string
   *                  example: inputFileName
   *                  required: true
   *                duration:
   *                  description: "Duration in minutes"
   *                  type: number
   *                  example: 4
   *                  required: true
   *                startTime:
   *                  description: "Start time in HH:mm:ss format"
   *                  type: string
   *                  example: 00:00:00
   *                  required: true
   *                endTime:
   *                  description: "End time in HH:mm:ss format"
   *                  type: string
   *                  example: 00:04:00
   *                  required: true
   *    responses:
   *      '200':
   *        description: "Video will be played using chunking"
   *      '500':
   *        description: "Server error"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: false
   *               message:
   *                 description: "Response Message"
   *                 type: string
   *                 example: Error message generated by the server
   */
  app.get('/api/video/videoChunk', [authJwt.verifyToken], controller.getOutputVideoStream)

  /**
   * @swagger
   * /api/video/list:
   *   get:
   *    tags:
   *       - Summarization
   *    summary: "Get list processed videos for a client id"
   *    operationId: prcessvideo
   *    description: "Used to summarize video"
   *    parameters:
   *      - in: header
   *        name: x-access-token
   *        schema:
   *          type: string
   *        required: true
   *    requestBody:
   *       content:
   *          application/json:
   *            schema:
   *              type: object
   *              properties:
   *                clientId:
   *                  description: "Client Id"
   *                  type: string
   *                  example: clientId
   *                  required: true
   *                duration:
   *                  description: "Duration in minutes"
   *                  type: number
   *                  example: 4
   *                  required: true
   *                startTime:
   *                  description: "Start time in HH:mm:ss format"
   *                  type: string
   *                  example: 00:00:00
   *                  required: true
   *                endTime:
   *                  description: "End time in HH:mm:ss format"
   *                  type: string
   *                  example: 00:04:00
   *                  required: true
   *    responses:
   *      '200':
   *        description: "Processed video list"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: true
   *               message:
   *                 description: "Response Message"
   *                 type: string
   *                 example: Video list found for the client with client id
   *               data:
   *                 description: "Video data"
   *                 type: string
   *                 example: data
   *      '500':
   *        description: "Server error"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: false
   *               message:
   *                 description: "Response Message"
   *                 type: string
   *                 example: Error message generated by the server
   */
  app.get('/api/video/list', [authJwt.verifyToken], controller.getVideoList)
}
