const { authJwt } = require('../middleware')
const controller = require('../controllers/algorithm.controller')

module.exports = function (app) {
  app.use(function (req, res, next) {
    res.header('Access-Control-Allow-Headers', 'x-access-token, Origin, Content-Type, Accept')
    next()
  })
  /**
   * @swagger
   *tags:
   *  name: Algorithms
   *  description: API to manage the algorithms.
   */

  /**
   * @swagger
   * /api/algorithms/every:
   *   get:
   *    tags:
   *       - Algorithms
   *    summary: "All algorithms details"
   *    operationId: everyAlgo
   *    description: "Use to get details of all algorithms"
   *    parameters:
   *      - in: header
   *        name: x-access-token
   *        schema:
   *          type: string
   *        required: true
   *    responses:
   *      '200':
   *        description: "A successful response"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: true
   *               data:
   *                 type: array
   *                 items:
   *                   type: object
   *                   properties:
   *                     id:
   *                       type: number
   *                       description: "ID of the algorithm"
   *                       example: 123
   *                     name:
   *                       description: "Name of the algorithm"
   *                       type: string
   *                       example: testAlgorithm
   *      '500':
   *        description: "Server error"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: false
   *               message:
   *                 description: "Type of failure"
   *                 type: string
   *                 example: Error message generated by the server
   */
  app.get('/api/algorithms/every', [authJwt.verifyToken, authJwt.isAdmin], controller.viewAlgos)

  /**
   * @swagger
   * /api/algorithms:
   *   get:
   *    tags:
   *       - Algorithms
   *    summary: "All algorithms details of a user"
   *    operationId: everyAlgoUser
   *    description: "Use to get details of all algorithms of a user"
   *    parameters:
   *      - in: header
   *        name: x-access-token
   *        schema:
   *          type: string
   *        required: true
   *    responses:
   *      '200':
   *        description: "A successful response"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: true
   *               data:
   *                 type: array
   *                 items:
   *                   type: object
   *                   properties:
   *                     id:
   *                       type: number
   *                       description: "ID of the algorithm"
   *                       example: 123
   *                     name:
   *                       description: "Name of the algorithm"
   *                       type: string
   *                       example: testAlgorithm
   *                     available:
   *                       description: "Availability status of the algorithm"
   *                       type: number
   *                       example: 1
   *      '500':
   *        description: "Server error"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: false
   *               message:
   *                 description: "Type of failure"
   *                 type: string
   *                 example: Error message generated by the server
   */
  app.get('/api/algorithms', [authJwt.verifyToken], controller.getAlgos)

  /**
   * @swagger
   * /api/algorithms/edit/{id}:
   *   put:
   *    tags:
   *       - Algorithms
   *    summary: "Update algorithm"
   *    operationId: updateAlgorithm
   *    description: "Use to update the details of an algorithm."
   *    parameters:
   *      - in: path
   *        name: id
   *        schema:
   *          type: string
   *        required: true
   *      - in: header
   *        name: x-access-token
   *        schema:
   *          type: string
   *        required: true
   *    requestBody:
   *       content:
   *          application/json:
   *            schema:
   *              type: object
   *              properties:
   *                name:
   *                  description: "Name of the algorithm"
   *                  type: string
   *                  example: testAlgo
   *    responses:
   *       '200':
   *         description: "A successful response"
   *         content:
   *           application/json:
   *             schema:
   *              type: object
   *              properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: true
   *               message:
   *                  description: "Response Message"
   *                  type: string
   *                  example: Algorithms updated!
   *       '500':
   *         description: "Internal Server error"
   *         content:
   *           application/json:
   *             schema:
   *              type: object
   *              properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: false
   *               message:
   *                 description: "Response Message"
   *                 type: string
   *                 example: Error message generated by the server
   */
  app.put('/api/algorithms/edit/:id', [authJwt.verifyToken, authJwt.isAdmin], controller.updtAlgo)

  /**
   * @swagger
   * /api/algos:
   *   get:
   *    tags:
   *       - Algorithms
   *    summary: "View algorithms"
   *    operationId: allAlgo
   *    description: "Use to get details of all algorithms"
   *    parameters:
   *      - in: header
   *        name: x-access-token
   *        schema:
   *          type: string
   *        required: true
   *    responses:
   *      '200':
   *        description: "A successful response"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: true
   *               data:
   *                 type: array
   *                 items:
   *                   type: object
   *                   properties:
   *                     id:
   *                       type: number
   *                       description: "ID of the algorithm"
   *                       example: 123
   *                     name:
   *                       description: "Name of the algorithm"
   *                       type: string
   *                       example: testAlgorithm
   *      '500':
   *        description: "Server error"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: false
   *               message:
   *                 description: "Type of failure"
   *                 type: string
   *                 example: Error message generated by the server
   */
  app.get('/api/algos', [authJwt.verifyToken], controller.viewAlgos)

  /**
   * @swagger
   * /api/algo/{id}:
   *   get:
   *    tags:
   *       - Algorithms
   *    summary: "View algorithm details"
   *    operationId: everyAlgo
   *    description: "Use to get details of an algorithms"
   *    parameters:
   *      - in: path
   *        name: id
   *        schema:
   *          type: string
   *        required: true
   *      - in: header
   *        name: x-access-token
   *        schema:
   *          type: string
   *        required: true
   *    responses:
   *      '200':
   *        description: "A successful response"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: true
   *               data:
   *                 type: object
   *                 properties:
   *                   id:
   *                     type: number
   *                     description: "ID of the algorithm"
   *                     example: 123
   *                   name:
   *                     description: "Name of the algorithm"
   *                     type: string
   *                     example: testAlgorithm
   *      '500':
   *        description: "Server error"
   *        content:
   *          application/json:
   *            schema:
   *             type: object
   *             properties:
   *               success:
   *                 description: "Result type"
   *                 type: boolean
   *                 example: false
   *               message:
   *                 description: "Type of failure"
   *                 type: string
   *                 example: Error message generated by the server
   */
  app.get('/api/algo/:id', [authJwt.verifyToken], controller.getAlgoById)
}
